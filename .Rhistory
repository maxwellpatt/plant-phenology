library(terra)
library(sf)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(here)
library(tmap)
library(cowplot)
rm(list = ls())
library(terra)
library(sf)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(here)
library(tmap)
library(cowplot)
rm(list = ls())
landsat_20180612 <- rasst(here("data/landsat_20180612.tif"))
landsat_20180612 <- rast(here("data/landsat_20180612.tif"))
knitr::opts_chunk$set(echo = TRUE, include = TRUE)
```{r ndvi-function}
### computing NDVI for a single scene
We have 8 scenes collected by the Landsat OLI sensor on 8 different days throughout the year.
landsat_20180612
landsat_20180612 <- rast(here("data/landsat_20180612.tif"))
landsat_20180612
# loading Landsat from June 12 2018
landsat_20180612 <- rast(here("data/landsat_20180612.tif"))
names(landsat_scene) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
# loading Landsat from June 12 2018
landsat_20180612 <- rast(here("data/landsat_20180612.tif"))
names(landsat_20180612) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
# apply NDVI function to compute the index
ndvi_20180612 <- lapp(landsat_20180612[[c(4, 3)]], fun = ndvi_fun)
ndvi_fun = function(nir, red){
(nir - red) / (nir + red)
}
# loading Landsat from June 12 2018
landsat_20180612 <- rast(here("data/landsat_20180612.tif"))
names(landsat_20180612) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
# apply NDVI function to compute the index
ndvi_20180612 <- lapp(landsat_20180612[[c(4, 3)]], fun = ndvi_fun)
ndvi_20180612
# load in each layer
landsat_20180612 <-rast(here("data/landsat_20180612.tif"))
landsat_20180815 <- rast(here("data/landsat_20180815.tif"))
landsat_20181018 <- rast(here("data/landsat_20181018.tif"))
landsat_20181103 <- rast(here("data/landsat_20181103.tif"))
landsat_20190122 <- rast(here("data/landsat_20190122.tif"))
landsat_20190223 <- rast(here("data/landsat_20190223.tif"))
landsat_20190412 <- rast(here("data/landsat_20190412.tif"))
landsat_20190701 <- rast(here("data/landsat_20190701.tif"))
# load in each layer
landsat_20180612 <-rast(here("data/landsat_20180612.tif"))
landsat_20180815 <- rast(here("data/landsat_20180815.tif"))
landsat_20181018 <- rast(here("data/landsat_20181018.tif"))
landsat_20181103 <- rast(here("data/landsat_20181103.tif"))
landsat_20190122 <- rast(here("data/landsat_20190122.tif"))
landsat_20190223 <- rast(here("data/landsat_20190223.tif"))
landsat_20190412 <- rast(here("data/landsat_20190412.tif"))
landsat_20190701 <- rast(here("data/landsat_20190701.tif"))
# rename each layer for convenience
names(landsat_20180612) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20180815) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20181018) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20181103) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20190122) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20190223) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20190412) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20190701) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
# load in each layer
landsat_20180612 <-rast(here("data/landsat_20180612.tif"))
landsat_20180815 <- rast(here("data/landsat_20180815.tif"))
landsat_20181018 <- rast(here("data/landsat_20181018.tif"))
landsat_20181103 <- rast(here("data/landsat_20181103.tif"))
landsat_20190122 <- rast(here("data/landsat_20190122.tif"))
landsat_20190223 <- rast(here("data/landsat_20190223.tif"))
landsat_20190412 <- rast(here("data/landsat_20190412.tif"))
landsat_20190701 <- rast(here("data/landsat_20190701.tif"))
# rename each layer for convenience
names(landsat_20180612) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20180815) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20181018) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20181103) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20190122) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20190223) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20190412) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
names(landsat_20190701) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
library(terra)
library(sf)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(here)
library(tmap)
library(cowplot)
rm(list = ls())
ndvi_fun = function(nir, red){
(nir - red) / (nir + red)
}
# loading Landsat from June 12 2018
landsat_20180612 <- rast(here("data/landsat_20180612.tif"))
names(landsat_20180612) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
# apply NDVI function to compute the index
ndvi_20180612 <- lapp(landsat_20180612[[c(4, 3)]], fun = ndvi_fun)
# show results
ndvi_20180612
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
# update function to create NDVI layers and stack them
create_ndvi_layer <- function(i){
landsat <- rast(files[i])
names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
ndvi <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)
}
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
# update function to create NDVI layers and stack them
create_ndvi_layer <- function(i){
landsat <- rast(files[i])
names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
ndvi <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)
}
# apply function across al files to create a stack of NDVI layers
all_ndvi <- stack(lapply(files, create_ndvi_layer))
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
# update function to create NDVI layers and stack them
create_ndvi_layer <- function(i){
landsat <- rast(files[i])
names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
ndvi <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)
}
# apply function across al files to create a stack of NDVI layers
all_ndvi <- c(create_ndvi_layer(1),
create_ndvi_layer(2),
create_ndvi_layer(3),
create_ndvi_layer(4),
create_ndvi_layer(5),
create_ndvi_layer(6),
create_ndvi_layer(7),
create_ndvi_layer(8))
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
# update function to create NDVI layers and stack them
create_ndvi_layer <- function(i){
landsat <- rast(files[i])
names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
ndvi <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)
}
# apply function across al files to create a stack of NDVI layers
files <- list.files(here("data"), pattern = "\\.tif$", full.names = TRUE)
# Apply function across all files to create a stack of NDVI layers
all_ndvi <- stack(lapply(files, create_ndvi_layer))
library(terra)
library(sf)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(here)
library(tmap)
library(cowplot)
rm(list = ls())
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
# update function to create NDVI layers and stack them
create_ndvi_layer <- function(i){
landsat <- rast(files[i])
names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
ndvi <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)
}
# apply function across al files to create a stack of NDVI layers
files <- list.files(here("data"), pattern = "\\.tif$", full.names = TRUE)
# Apply function across all files to create a stack of NDVI layers
all_ndvi <- stack(lapply(files, create_ndvi_layer))
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
# update function to create NDVI layers and stack them
create_ndvi_layer <- function(i){
landsat <- rast(files[i])
names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
ndvi <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)
}
# apply function across al files to create a stack of NDVI layers
all_ndvi <- c(create_ndvi_layer(1),
create_ndvi_layer(2),
create_ndvi_layer(3),
create_ndvi_layer(4),
create_ndvi_layer(5),
create_ndvi_layer(6),
create_ndvi_layer(7),
create_ndvi_layer(8))
ndvi_fun = function(nir, red){
(nir - red) / (nir + red)
}
# loading Landsat from June 12 2018
landsat_20180612 <- rast(here("data/landsat_20180612.tif"))
names(landsat_20180612) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
# apply NDVI function to compute the index
ndvi_20180612 <- lapp(landsat_20180612[[c(4, 3)]], fun = ndvi_fun)
# show results
ndvi_20180612
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
# update function to create NDVI layers and stack them
create_ndvi_layer <- function(i){
landsat <- rast(files[i])
names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
ndvi <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)
}
# apply function across al files to create a stack of NDVI layers
all_ndvi <- c(create_ndvi_layer(1),
create_ndvi_layer(2),
create_ndvi_layer(3),
create_ndvi_layer(4),
create_ndvi_layer(5),
create_ndvi_layer(6),
create_ndvi_layer(7),
create_ndvi_layer(8))
library(terra)
library(sf)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(here)
library(tmap)
library(cowplot)
rm(list = ls())
ndvi_fun = function(nir, red){
(nir - red) / (nir + red)
}
# loading Landsat from June 12 2018
landsat_20180612 <- rast(here("data/landsat_20180612.tif"))
names(landsat_20180612) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
# apply NDVI function to compute the index
ndvi_20180612 <- lapp(landsat_20180612[[c(4, 3)]], fun = ndvi_fun)
# show results
ndvi_20180612
# loading Landsat from June 12 2018
landsat_20180612 <- rast(here("data/landsat_20180612.tif"), quiet = TRUE)
# loading Landsat from June 12 2018
landsat_20180612 <- rast(here("data/landsat_20180612.tif"))
names(landsat_20180612) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
# apply NDVI function to compute the index
ndvi_20180612 <- lapp(landsat_20180612[[c(4, 3)]], fun = ndvi_fun)
# show results
ndvi_20180612
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
# update function to create NDVI layers and stack them
create_ndvi_layer <- function(i){
landsat <- rast(files[i])
names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
ndvi <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)
}
# apply function across al files to create a stack of NDVI layers
all_ndvi <- c(create_ndvi_layer(1),
create_ndvi_layer(2),
create_ndvi_layer(3),
create_ndvi_layer(4),
create_ndvi_layer(5),
create_ndvi_layer(6),
create_ndvi_layer(7),
create_ndvi_layer(8))
knitr::opts_chunk$set(echo = TRUE, include = TRUE)
names(landsat_20180612) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
landsat_20180612
landsat_20180612 <-rast(here("labs", "data", "week8", "landsat_20180612.tif"))
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
# update function to create NDVI layers and stack them
create_ndvi_layer <- function(i){
landsat <- rast(files[i])
names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
ndvi <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)
}
# apply function across al files to create a stack of NDVI layers
all_ndvi <- c(create_ndvi_layer(1),
create_ndvi_layer(2),
create_ndvi_layer(3),
create_ndvi_layer(4),
create_ndvi_layer(5),
create_ndvi_layer(6),
create_ndvi_layer(7),
create_ndvi_layer(8))
# generate a list of file paths for Landsat
files <- list.files(here("data"), pattern = "*.tif", full.names = TRUE)
# update function to create NDVI layers and stack them
create_ndvi_layer <- function(i){
landsat <- rast(files[i])
names(landsat) <- c("blue", "green", "red", "NIR", "SWIR1", "SWIR2")
ndvi <- lapp(landsat[[c(4, 3)]], fun = ndvi_fun)
}
# apply function across al files to create a stack of NDVI layers
all_ndvi <- c(create_ndvi_layer(1),
create_ndvi_layer(2),
create_ndvi_layer(3),
create_ndvi_layer(4),
create_ndvi_layer(6),
create_ndvi_layer(7),
create_ndvi_layer(8),
create_ndvi_layer(9))
# update layer names to match date
names(all_ndvi) <- c("2018-06-12",
"2018-08-15",
"2018-10-18",
"2018-11-03",
"2019-01-22",
"2019-02-23",
"2019-04-12",
"2019-07-01")
sites <- st_read(here("data", "study_sites.shp"))
sites
# plot study sites on a single NDVI layer
tm_shape(all_ndvi[[1]]) +
tm_raster() +
tm_shape(sites) +
tm_polygons()
# extract average NDVI for each site
sites_ndvi <- terra::extract(all_ndvi, sites, fun = "mean")
# append result to site data
sites_annotated <- cbind(sites, sites_ndvi)
sites_clean <- sites_annotated %>%
st_drop_geometry() %>%
select(-ID) %>%
pivot_longer(!study_site) %>%
rename("NDVI" = value) %>%
mutate("year" = str_sub(name, 2, 5),
"month" = str_sub(name, 7, 8),
"day" = str_sub(name, -2, -1)) %>%
unite("date", 4:6, sep = "-") %>%
mutate("date" = lubridate::as_date(date))
sites_clean <- sites_annotated %>%
st_drop_geometry() %>%
select(-ID) %>%
pivot_longer(!study_site) %>%
rename("NDVI" = value) %>%
mutate("year" = str_sub(name, 2, 5),
"month" = str_sub(name, 7, 8),
"day" = str_sub(name, -2, -1)) %>%
unite("date", 4:6, sep = "-") %>%
mutate("date" = lubridate::as_date(date))
ggplot(sites_clean,
aes(x = date, y = NDVI,
group = study_site, col = study_site)) +
scale_color_manual(values = c("#EAAC8B", "#315C2B", "#315C2B", "#315C2B","#9EA93F")) +
geom_line() +
theme_minimal() +
labs(x = "", y = "Normalized Difference Vegetation Index (NDVI)", col = "Vegetation type",
title = "Seasonal cycles of vegetation productivity")
# show sites file for reference
plot(sites)
# read in file
sites <- st_read(here("data", "study_sites.shp"))
# plot study sites on a single NDVI layer
tm_shape(all_ndvi[[1]]) +
tm_raster() +
tm_shape(sites) +
tm_polygons()
